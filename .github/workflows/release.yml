# .github/workflows/release.yml
name: Release API

on:
  push:
    branches:
      - main
    paths:
      - "package.json"
      - "CHANGELOG.md"
      # Wichtig: Nur wenn KEINE Changesets mehr da sind
      # (werden beim Release-PR-Merge entfernt)

jobs:
  release:
    name: Build, Push & Publish
    runs-on: ubuntu-latest

    permissions:
      contents: write # For GitHub Releases & Tags
      packages: write # For Docker images in GHCR

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Prüfe, ob noch Changesets existieren (außer README)
      # Wenn ja, ist es kein Release-Merge → abbrechen
      - name: Check for changesets
        id: check_changesets
        run: |
          if ls .changeset/*.md 2>/dev/null | grep -v "README" | grep -q .; then
            echo "has_changesets=true" >> $GITHUB_OUTPUT
            echo "⚠️ Changesets found - this is not a release merge"
          else
            echo "has_changesets=false" >> $GITHUB_OUTPUT
            echo "✅ No changesets found - proceeding with release"
          fi

      - name: Setup pnpm
        if: steps.check_changesets.outputs.has_changesets == 'false'
        uses: pnpm/action-setup@v4

      - name: Setup Node.js for build
        if: steps.check_changesets.outputs.has_changesets == 'false'
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        if: steps.check_changesets.outputs.has_changesets == 'false'
        run: pnpm install --frozen-lockfile

      # --- Docker section ---
      - name: Login to GitHub Container Registry
        if: steps.check_changesets.outputs.has_changesets == 'false'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version for Docker tags
        if: steps.check_changesets.outputs.has_changesets == 'false'
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          REPO_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "repo=$REPO_LOWER" >> $GITHUB_OUTPUT
          echo "📦 Releasing version: $VERSION"
          echo "📦 Repository: $REPO_LOWER"

      - name: Build and push Docker image
        if: steps.check_changesets.outputs.has_changesets == 'false'
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ steps.version.outputs.repo }}:${{ steps.version.outputs.version }}
            ghcr.io/${{ steps.version.outputs.repo }}:latest
          labels: |
            org.opencontainers.image.version=${{ steps.version.outputs.version }}
            org.opencontainers.image.source=${{ github.repositoryUrl }}

      # --- NPM & GitHub Release section ---
      - name: Setup Node.js for publish
        if: steps.check_changesets.outputs.has_changesets == 'false'
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"

      - name: Publish to npm and create GitHub Release
        if: steps.check_changesets.outputs.has_changesets == 'false'
        uses: changesets/action@v1
        with:
          publish: pnpm changeset publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
